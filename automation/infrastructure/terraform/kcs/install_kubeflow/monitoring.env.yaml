namespaceOverride: "kubeflow-monitoring"

kubeProxy:
  enabled: false
nodeExporter:
  enabled: false
kubeStateMetrics:
  enabled: false

prometheusOperator:
  serviceMonitorSelectorNilUsesHelmValues: false
  namespaces:
    releaseNamespace: true
    additional:
    - kubeflow

prometheus:
  prometheusSpec:
    additionalScrapeConfigs:
      # Custom monitoring: monitoring ml-pipeline (the Kubeflow Pipelines API server)
      # TODO: remove when fixed: https://github.com/kubeflow/manifests/issues/2011
      - job_name: 'kubeflow-ml-pipeline'
        scrape_interval: 15s
        static_configs:
          - targets: ['ml-pipeline.kubeflow:8888']

      # Scan for all services in "kubeflow..." namespaces with prometheus.io annotations (scrape=true, port, address).
      # Both HTTP and HTTPS
      - job_name: 'kubeflow-services'
        scrape_interval: 15s
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          insecure_skip_verify: true
        kubernetes_sd_configs:
          - role: service
        relabel_configs:
          # Only "kubeflow..." namespaces
          - source_labels: [__meta_kubernetes_namespace]
            action: keep
            regex: kubeflow(.*)
          # Only with prometheus.io/scrape = true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          # Use scheme
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          # Use path (/metrics)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          # Use address & port
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          # Remove prefix from labels
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          # Save namespace label
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          # Save service name label
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: service_name

      # Scan for all pods in "kubeflow..." namespaces with prometheus.io annotations (scrape=true, port, address).
      # Both HTTP and HTTPS
      - job_name: 'kubeflow-pods'
        scrape_interval: 15s
        authorization:
          credentials_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        tls_config:
          insecure_skip_verify: true
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace]
            action: keep
            regex: kubeflow(.*)
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: service_name
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: hostname

grafana:
  namespaceOverride: "kubeflow-monitoring"
